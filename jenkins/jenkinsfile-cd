pipeline {
    agent any
    
    triggers {
        GenericTrigger(
            genericVariables: [
                [key: 'ARTIFACT_URL', value: '$.event_data.resources[0].resource_url']
            ],

            causeString: 'Triggered on $ARTIFACT_URL',

            token: 'f0rtun3',

            printContributedVariables: true,
            printPostContent: true,

            silentResponse: false
        )
    }

    stages {       
        
        stage ('Deploy_to_Dev') {
             steps {
                     withCredentials([string(credentialsId: "argocd-deploy-role", variable: 'ARGOCD_AUTH_TOKEN')]) {
                        sh '''
                            ARGOCD_SERVER="argocd.sharedsvc.home.kwpivotal.com"
                            
                            # Deploy to ArgoCD
                            # ARGOCD_SERVER=$ARGOCD_SERVER argocd app sync fortune-app-dev --force
                            ARGOCD_SERVER=$ARGOCD_SERVER argocd app set fortune-app-dev --kustomize-image $ARTIFACT_URL
                            ARGOCD_SERVER=$ARGOCD_SERVER argocd app wait fortune-app-dev
                        '''
               }
            }
        }

        stage ('Perform System Test') {
            steps {
                script {
                    input(id: "System Test Pass Gate", message: "If System Test passed, move forward?", ok: 'Start UAT Test')
                }
            }
        }

         stage ('Perform_UAT_Test') {
            steps {
                script {
                    input(id: "UAT Test Pass Gate", message: "If UAT passed, deploy Fortune app tp production?", ok: 'Deploy_to_Prod')
                }
            }
        }

        stage ('Deploy_to_Prod') {
             steps {
                     withCredentials([string(credentialsId: "argocd-deploy-role", variable: 'ARGOCD_AUTH_TOKEN')]) {
                        sh '''
                            ARGOCD_SERVER="argocd.sharedsvc.home.kwpivotal.com"
                            
                            # Deploy to ArgoCD
                            #ARGOCD_SERVER=$ARGOCD_SERVER argocd app sync fortune-app-prod --force
                            ARGOCD_SERVER=$ARGOCD_SERVER argocd app set fortune-app-prod --kustomize-image $ARTIFACT_URL
                            ARGOCD_SERVER=$ARGOCD_SERVER argocd app wait fortune-app-prod
                        '''
               }
            }
        }
    }
}